[{"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\index.js":"1","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\reportWebVitals.js":"2","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\App.js":"3","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\Home.js":"4","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\Dashboard.js":"5","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\Navbar.js":"6","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\auth\\Signup.js":"7","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\auth\\Login.js":"8","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\EditableForm.js":"9","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\CreateForm.js":"10","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Context\\AuthContext.js":"11","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\Responses.js":"12","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\FormToFill.js":"13","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\AddFormElements.js":"14","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\SingleLineInputDetails.js":"15","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\TextareaInputDetails.js":"16","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\CheckboxesDetailsPanel.js":"17","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\RadioBtnDetailsPanel.js":"18","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\Checkboxes.js":"19","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\RadioBtn.js":"20","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\Textarea.js":"21","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\SingleLine.js":"22","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\SingleResponse.js":"23","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\SubmissionStatus.js":"24","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Page404.js":"25","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\DashboardListItem.js":"26","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\navbar_responsive.js":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1674,"mtime":1609298917052,"results":"31","hashOfConfig":"29"},{"size":578,"mtime":1609322278703,"results":"32","hashOfConfig":"29"},{"size":4482,"mtime":1609906475538,"results":"33","hashOfConfig":"29"},{"size":3031,"mtime":1609944403725,"results":"34","hashOfConfig":"29"},{"size":3549,"mtime":1609911364623,"results":"35","hashOfConfig":"29"},{"size":3486,"mtime":1609911358711,"results":"36","hashOfConfig":"29"},{"size":9625,"mtime":1609918702941,"results":"37","hashOfConfig":"29"},{"size":7090,"mtime":1609918833842,"results":"38","hashOfConfig":"29"},{"size":1895,"mtime":1609255933791,"results":"39","hashOfConfig":"29"},{"size":2475,"mtime":1609837551491,"results":"40","hashOfConfig":"29"},{"size":3239,"mtime":1609333254401,"results":"41","hashOfConfig":"29"},{"size":2967,"mtime":1609312542873,"results":"42","hashOfConfig":"29"},{"size":2136,"mtime":1609426006871,"results":"43","hashOfConfig":"29"},{"size":2282,"mtime":1609508701349,"results":"44","hashOfConfig":"29"},{"size":4847,"mtime":1609426138917,"results":"45","hashOfConfig":"29"},{"size":5005,"mtime":1609426133110,"results":"46","hashOfConfig":"29"},{"size":1370,"mtime":1609319484648,"results":"47","hashOfConfig":"29"},{"size":1368,"mtime":1609319351624,"results":"48","hashOfConfig":"29"},{"size":1850,"mtime":1609509046499,"results":"49","hashOfConfig":"29"},{"size":1020,"mtime":1609315156784,"results":"50","hashOfConfig":"29"},{"size":1450,"mtime":1609833837399,"results":"51","hashOfConfig":"29"},{"size":1233,"mtime":1609911336354,"results":"52","hashOfConfig":"29"},{"size":335,"mtime":1609300211709,"results":"53","hashOfConfig":"29"},{"size":2582,"mtime":1609909179629,"results":"54","hashOfConfig":"29"},{"size":768,"mtime":1609930795868,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"od9s71",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\index.js",[],["120","121"],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\reportWebVitals.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\App.js",["122"],"import React, { Component } from 'react';\nimport CreateForm from './Dashboard/CreateForm';\nimport EditableForm from './Dashboard/EditableForm';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './Home/Navbar.js';\nimport Home from './Home/Home.js';\nimport Signup from './auth/Signup.js';\nimport Login from './auth/Login.js';\nimport Dashboard from './Dashboard/Dashboard.js';\nimport AuthContextProvider from './Context/AuthContext';\nimport Responses from './Responses/Responses';\nimport FormToFill from './Responses/FormToFill';\nimport Page404 from './Page404'\nimport SubmissionStatus from './Responses/SubmissionStatus'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <AuthContextProvider>\n          <div className=\"App\">\n            {/* <Navbar isAuth={true} /> */}\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/signup' component={Signup} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/Dashboard' component={Dashboard} />\n              <Route exact path='/create' component={CreateForm} />\n              <Route exact path='/edit/:form_id' component={EditableForm} />\n              <Route exact path='/responses/:form_id' component={Responses} />\n              <Route exact path='/form/:form_id' component={FormToFill} />\n              <Route exact path='/formsubmission' component={SubmissionStatus} />\n              <Route path=\"*\" component={Page404} />\n            </Switch>\n          </div>\n        </AuthContextProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\Home.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\Dashboard.js",["123"],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\Navbar.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\auth\\Signup.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\auth\\Login.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\EditableForm.js",["124","125"],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\CreateForm.js",["126","127"],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Context\\AuthContext.js",["128"],"import React, { Component, createContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nclass AuthContextProvider extends Component {\r\n  state = {\r\n    isLoggedIn: false\r\n  }\r\n\r\n  checkAuthAndReturnData = (requiredData, formID = null) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios({\r\n        method: 'post',\r\n        url: '/authtest',\r\n        data: {\r\n          requiredData:  requiredData,\r\n          formID: formID\r\n        }\r\n      })\r\n      .then((response) => {\r\n          // handle success\r\n          console.log(\"Server returned: \" + response.data);\r\n          var result = response.data;\r\n          if (result == \"Wrong Form ID\") {\r\n            console.log(\"Server said 'Wrong Form ID\");\r\n            this.props.history.push(\"/pagenotfound\");\r\n          }else if (!result) {\r\n            // If not authenticated\r\n            console.log(\"Redirecting. Not logged In\");\r\n            this.props.history.push(\"/login\");\r\n            reject(false);\r\n          }else{\r\n            // If authenticated\r\n            console.log(\"Logged In\");\r\n            this.setState({\r\n              isLoggedIn: true\r\n            }, ()=>{\r\n              resolve(result);\r\n            });\r\n            // console.log(result);\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          // handle error\r\n          console.log(\"In the catch method of axios in AuthContext()\");\r\n          console.log(error);\r\n          this.props.history.push(\"/Login\");\r\n          reject(false);\r\n      })\r\n    });\r\n  \r\n  }\r\n  \r\n  render() { \r\n    return (\r\n      <AuthContext.Provider value={{ checkAuthAndReturnData: this.checkAuthAndReturnData, isLoggedIn: this.state.isLoggedIn}}>\r\n        {this.props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n \r\nexport default withRouter(AuthContextProvider);","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\Responses.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\FormToFill.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\AddFormElements.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\SingleLineInputDetails.js",["129"],"import React, { Component } from 'react';\r\n\r\nclass SingleLineInputDetails extends Component {\r\n\r\n  state = {\r\n    question: '',\r\n    action: 'Add',\r\n    emptyFieldError: ''\r\n  }\r\n  componentDidMount(){\r\n    if (this.props.defaultValues) {\r\n      console.log(\"Have Default Values\");\r\n      console.log(this.props.defaultValues);\r\n      this.setState({\r\n        question: this.props.defaultValues.question,\r\n        action: 'Done'\r\n      })\r\n    }else{\r\n      console.log(\"Don't have default values\")\r\n    }\r\n  }\r\n  createElement = (e) => {\r\n    e.preventDefault();\r\n    \r\n    var element = {\r\n      type: \"Single-line\",\r\n      question: this.state.question,\r\n    }\r\n    if(element.question && !element.question.replace(/\\s/g,\"\") == \"\"){\r\n      console.log(\"Create Element Ran\");\r\n      this.setState({\r\n        emptyFieldError: ''\r\n      });\r\n      this.props.sendElement(element, e.target.id);\r\n      this.props.closeDetailsPanel(e);\r\n    }else{\r\n      console.log(\"Empty field\");\r\n      this.setState({\r\n        emptyFieldError: 'Please enter a question'\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n  handleQuestion = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"detailsPanel single-line-input-details\">\r\n          <form className=\"detailsForm\" onSubmit={(e)=>{e.preventDefault()}}>\r\n              <h2 className=\"details-panel-heading\">Add a Single line Field</h2>\r\n              <input type=\"text\" id=\"question\" value={this.state.question} placeholder=\"Enter the Question\" onChange={this.handleQuestion} autoComplete=\"off\" />\r\n              <p className=\"empty-field-error\" >{this.state.emptyFieldError}</p>\r\n              <div className=\"details-panel-btns\">\r\n                <button onClick={this.createElement} id={this.props.elementIndex} >{this.state.action}</button>\r\n                {/* <input onSubmit={this.createElement} type=\"submit\" value=\"Adddd\" /> */}\r\n                <button onClick={this.props.closeDetailsPanel}>Cancel</button>\r\n              </div>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleLineInputDetails","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\TextareaInputDetails.js",["130"],"import React, { Component } from 'react';\r\n\r\nclass TextareaInputDetails extends Component {\r\n\r\n  state = {\r\n    question: '',\r\n    maxlength: '',\r\n    action: 'Add',\r\n    emptyFieldError: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.defaultValues) {\r\n      console.log(\"Have Default Values\");\r\n      console.log(this.props.defaultValues);\r\n      this.setState({\r\n        question: this.props.defaultValues.question,\r\n        maxlength: this.props.defaultValues.maxlength,\r\n        action: 'Done'\r\n      })\r\n    }else{\r\n      console.log(\"Don't have default values\")\r\n    }\r\n  }\r\n\r\n  createElement = (e) => {\r\n    e.preventDefault();\r\n    \r\n    var element = {\r\n      type: \"Textarea\",\r\n      question: this.state.question,\r\n      maxlength: this.state.maxlength,\r\n    }\r\n    if(element.question && !element.question.replace(/\\s/g,\"\") == \"\"){\r\n      console.log(\"Create Element Ran\");\r\n      this.setState({\r\n        emptyFieldError: ''\r\n      });\r\n      this.props.sendElement(element, e.target.id);\r\n      this.props.closeDetailsPanel(e);\r\n    }else{\r\n      console.log(\"Empty field\");\r\n      this.setState({\r\n        emptyFieldError: 'Please enter a question'\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n  handleQuestion = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"detailsPanel textarea-input-details\">\r\n          <form className=\"detailsForm\">\r\n              <h2 className=\"details-panel-heading\">Add a Textarea</h2>\r\n              <input type=\"text\" id=\"question\" placeholder=\"Enter the Question\" value={this.state.question} onChange={this.handleQuestion} autoComplete=\"off\" />\r\n              <input type=\"number\" id=\"maxlength\" placeholder=\"Character Limit (Optional)\" value={this.state.maxlength} onChange={this.handleQuestion} autoComplete=\"off\" />\r\n              <p className=\"empty-field-error\" >{this.state.emptyFieldError}</p>\r\n              <div className=\"details-panel-btns\">\r\n                <button onClick={this.createElement} id={this.props.elementIndex}>{this.state.action}</button>\r\n                <button onClick={this.props.closeDetailsPanel}>Cancel</button>\r\n              </div>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextareaInputDetails","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\CheckboxesDetailsPanel.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Detail-Panels\\RadioBtnDetailsPanel.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\Checkboxes.js",["131"],"import React from 'react';\r\n\r\nconst Checkboxes = ({question, values, id, editElement, deleteElement}) => {\r\n\r\n    if (editElement) {\r\n        console.log(\"Editing Buttons should be visible\");\r\n        var editButtons = <div className=\"edit-form-btns-container\">\r\n            <button onClick={editElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-pencil\" aria-hidden=\"true\" id={id} ></i></button>\r\n            <button onClick={deleteElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\" id={id} ></i></button>\r\n        </div>\r\n    }else{\r\n        console.log(\"Ediing Buttons should NOT be visible\");\r\n        var editButtons = null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkboxes-element form-element\" key={id}>\r\n            <label className=\"form-element-question\">{question}</label>\r\n            {\r\n                values.map((value, index) => {\r\n                    return(\r\n                        <div key={index}>\r\n                            <input className=\"checkbox-element-input\" type=\"checkbox\" name={question} id={`question${id+1}`} value={value} />\r\n                            <label htmlFor={`question${id+1}`}>{value}</label>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {editButtons}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkboxes","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\RadioBtn.js",["132"],"import React from 'react';\r\n\r\nconst RadioBtn = ({question, values, id, editElement, deleteElement}) => {\r\n\r\n    if (editElement) {\r\n        console.log(\"Editing Buttons should be visible\");\r\n        var editButtons = <div className=\"edit-form-btns-container\">\r\n            <button onClick={editElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-pencil\" aria-hidden=\"true\" id={id} ></i></button>\r\n            <button onClick={deleteElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\" id={id} ></i></button>\r\n        </div>\r\n    }else{\r\n        console.log(\"Ediing Buttons should NOT be visible\");\r\n        var editButtons = null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"radio-btn-element form-element\" key={id}>\r\n            <label className=\"form-element-question\">{question}</label>\r\n            {\r\n                values.map((value, index) => {\r\n                    return(\r\n                        <div key={index}>\r\n                            <input className=\"radio-element-input\" type=\"radio\" name={question} id={`question${id+1}`} value={value} required/>\r\n                            <label htmlFor={`question${id+1}`}>{value}</label> \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {editButtons}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioBtn","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\Textarea.js",["133","134"],"import React, { Component } from 'react';\r\nclass Textarea extends Component {\r\n\r\n  state = { \r\n    charsTyped: 0\r\n  }\r\n\r\n  componentDidMount(){\r\n    var textareaId = `#question${this.props.id+1}`;\r\n    var textareaValueLength = document.querySelector(textareaId).value.length;\r\n    this.setState({\r\n      charsTyped: textareaValueLength\r\n    })\r\n  }\r\n\r\n  handleTyping = (e)=>{\r\n    var charsTyped = e.target.value.length;\r\n    this.setState({\r\n      charsTyped: charsTyped\r\n    })\r\n  }\r\n\r\n  render() { \r\n    const {question, maxlength, id, editElement, deleteElement} = this.props;\r\n    if (editElement) {\r\n      console.log(\"Editing Buttons should be visible\");\r\n      var editButtons = <div className=\"edit-form-btns-container\">\r\n        <button onClick={editElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-pencil\" aria-hidden=\"true\" id={id} ></i></button>\r\n        <button onClick={deleteElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\" id={id} ></i></button>\r\n      </div>\r\n    }else{\r\n      console.log(\"Editing Buttons should NOT be visible\");\r\n      var editButtons = null;\r\n    }\r\n\r\n    if (this.props.maxlength && this.props.maxlength>=0) {\r\n      var charLimitDisplay = <p className=\"char-limit-textarea\">{this.state.charsTyped}/{this.props.maxlength}</p>\r\n    }else{\r\n      var charLimitDisplay = null;\r\n    }\r\n    return (\r\n      <div className=\"text-area-element form-element\" key={id}>\r\n          <label htmlFor={`question${id+1}`} className=\"form-element-question\">{question}</label>\r\n          <textarea onChange={this.handleTyping} className=\"textarea-element-input\" name={question} id={`question${id+1}`} rows=\"10\" cols=\"30\" maxLength={maxlength} required></textarea>\r\n          {editButtons}\r\n          {charLimitDisplay}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Textarea;","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Form-Elements\\SingleLine.js",["135"],"import React from 'react';\r\n\r\nconst SingleLine = ({question, id, editElement, deleteElement}) => {\r\n  if (editElement) {\r\n    console.log(\"Editing Buttons should be visible\");\r\n    var editButtons = <div className=\"edit-form-btns-container\">\r\n      <button onClick={editElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-pencil\" aria-hidden=\"true\" id={id} ></i></button>\r\n      <button onClick={deleteElement} id={id} className=\"edit-form-btns\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\" id={id} ></i></button>\r\n    </div>\r\n  }else{\r\n    console.log(\"Ediing Buttons should NOT be visible\");\r\n    var editButtons = null;\r\n  }\r\n  return (\r\n    <div className=\"single-line-element form-element\" key={id} id={id}>\r\n        <label htmlFor={`question${id+1}`} className=\"form-element-question\">{question}</label>\r\n        <input className=\"oneline-element-input\" type=\"text\" name={question} id={`question${id+1}`} autoComplete=\"off\" required/>\r\n        {editButtons}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleLine","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\SingleResponse.js",["136","137"],"import React from 'react';\r\n\r\nconst SingleResponse = ({response, index}) => {\r\n    console.log(response);\r\n    var generatedResponse = [];\r\n    for (var question in response) {\r\n        if (response.hasOwnProperty(question)) {\r\n            console.log(question + \" -> \" + response[question]);\r\n            if (Array.isArray(response[question])) {\r\n                var checkboxAnswers = []\r\n                response[question].forEach(checkboxAnswer => {\r\n                    var answer = <p>{checkboxAnswer}</p>\r\n                    checkboxAnswers.push(answer);\r\n                });\r\n\r\n                // </div>\r\n                var toAppend = \r\n                <div className=\"single-response-element\">\r\n                    <h3 className=\"response-question\">{question}</h3>\r\n                    <div>\r\n                        {checkboxAnswers}\r\n                    </div>\r\n                </div>\r\n            }else{\r\n                var toAppend = \r\n                <div className=\"single-response-element\">\r\n                    <h3 className=\"response-question\">{question}</h3>\r\n                    <p>{response[question]}</p>\r\n                </div>\r\n            }\r\n            generatedResponse.push(toAppend);\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"single-response\" key={index}>\r\n        <p className=\"response-number\">{`Response No. ${index+1}`}</p>\r\n        {generatedResponse}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleResponse","D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Responses\\SubmissionStatus.js",["138","139"],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Page404.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Dashboard\\DashboardListItem.js",[],"D:\\Programming\\Node-JS\\Projects\\Doodle-Forms\\doodle-forms\\src\\Home\\navbar_responsive.js",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":44,"column":34,"nodeType":"151","messageId":"152","endLine":44,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":159,"column":69,"nodeType":"151","messageId":"152","endLine":159,"endColumn":71},{"ruleId":"149","severity":1,"message":"150","line":178,"column":39,"nodeType":"151","messageId":"152","endLine":178,"endColumn":41},{"ruleId":"149","severity":1,"message":"150","line":105,"column":69,"nodeType":"151","messageId":"152","endLine":105,"endColumn":71},{"ruleId":"149","severity":1,"message":"150","line":129,"column":39,"nodeType":"151","messageId":"152","endLine":129,"endColumn":41},{"ruleId":"149","severity":1,"message":"150","line":26,"column":22,"nodeType":"151","messageId":"152","endLine":26,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":29,"column":64,"nodeType":"151","messageId":"152","endLine":29,"endColumn":66},{"ruleId":"149","severity":1,"message":"150","line":34,"column":64,"nodeType":"151","messageId":"152","endLine":34,"endColumn":66},{"ruleId":"153","severity":1,"message":"154","line":13,"column":13,"nodeType":"147","messageId":"155","endLine":13,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":13,"column":13,"nodeType":"147","messageId":"155","endLine":13,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":33,"column":11,"nodeType":"147","messageId":"155","endLine":33,"endColumn":22},{"ruleId":"153","severity":1,"message":"156","line":39,"column":11,"nodeType":"147","messageId":"155","endLine":39,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":12,"column":9,"nodeType":"147","messageId":"155","endLine":12,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":11,"column":44,"nodeType":"159","messageId":"160","endLine":14,"endColumn":18},{"ruleId":"153","severity":1,"message":"161","line":25,"column":21,"nodeType":"147","messageId":"155","endLine":25,"endColumn":29},{"ruleId":"145","severity":1,"message":"162","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":15,"column":21,"nodeType":"151","messageId":"152","endLine":15,"endColumn":23},{"ruleId":"145","severity":1,"message":"163","line":6,"column":7,"nodeType":"147","messageId":"148","endLine":6,"endColumn":20},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'editButtons' is already defined.","redeclared","'charLimitDisplay' is already defined.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'checkboxAnswers'.","ArrowFunctionExpression","unsafeRefs","'toAppend' is already defined.","'NavLink' is defined but never used.","'queryInterval' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]